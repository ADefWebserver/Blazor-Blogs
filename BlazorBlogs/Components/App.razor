<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <meta name="revised" content="Saturday, January 7th, 2025, 5:00 am" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["BlazorBlogs.styles.css"]" />  
    <link rel="stylesheet" href="@Assets["_content/Radzen.Blazor/css/default.css"]" />
    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
    <link rel="icon" type="image/png" href="favicon.png" />
    <ImportMap />
    <HeadOutlet @rendermode="PageRenderMode" />
    <RadzenTheme Theme="default" @rendermode="InteractiveServer" />
</head>

<body>
    <Routes @rendermode="PageRenderMode" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="_content/Blazored.TextEditor/quill-blot-formatter.min.js"></script>
    <script src="_content/Blazored.TextEditor/Blazored-BlazorQuill.js"></script>
    <script async src='https://www.google-analytics.com/analytics.js'></script>

    <script>
        (function () {
            window.gaFunctions = {
                gaTracking: function (gaTrackingID) {
                    (ga.q = ga.q || []).push(arguments);
                    ga.l = +new Date;
                    ga('create', gaTrackingID, 'auto');
                    ga('send', 'pageview');
                }
            };
            window.DisqusFunctions = {
                createDisqus: function (disqusThreadElement, disqusSrc) {
                    var dsq = document.createElement('script');
                    dsq.type = 'text/javascript';
                    dsq.async = true;
                    dsq.src = disqusSrc;
                    dsq.disqus_container_id = 'disqus_thread';
                    disqusThreadElement.appendChild(dsq);
                },
                resetDisqus: function (newIdentifier, newUrl, newTitle) {
                    try {
                        DISQUS.reset({
                            reload: true,
                            config: function () {
                                this.page.identifier = newIdentifier;
                                this.page.url = newUrl;
                                this.page.title = newTitle;
                            }
                        });
                    }
                    catch (err) {
                        // do nothing
                    }
                }
            };
        })();
    </script>
</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode PageRenderMode =>
        HttpContext.AcceptsInteractiveRouting() ? InteractiveServer : null;
}
