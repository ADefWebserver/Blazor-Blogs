@using BlazorBlogs.Data;
@inject NavigationManager NavigationManager
@inherits OwningComponentBase<GeneralSettingsService>

<AuthorizeView>
    <Authorized>
        <a href="Account/Manage">Hello, @context.User.Identity.Name!</a>
        <form action="Account/Logout" method="post">
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
            <button type="submit" class="nav-link btn btn-link">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        @if (AllowRegistration)
        {
            <a href="Account/Register">Register</a>
        }
        <a href="Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>
@code {
    bool AllowRegistration = false;
    private string currentUrl;

    protected override async Task OnInitializedAsync()
    {
        var objGeneralSettings = await @Service.GetGeneralSettingsAsync();
        AllowRegistration = objGeneralSettings.AllowRegistration;
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }
}